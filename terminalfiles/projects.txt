<a href="https://github.com/stanouz/smart-city">Smart city</a> - A distributed method for assigning parking spaces to smart vehicles. Cars and 
parking lots communicate using a messaging system, in order to negociate the best price for both. Prices are dynamically calculated by parkings 
taking into account parameters like occupancy rate, parking time, fidelity bonuses... Cars offer prices and try to get the lowest price, they 
negociate with several parkings simultaneously, so they can get lower prices. Vehicles are driving autonomosly on a city map and once they get a
park proposal, they go to the choosen parking lot and park for the time they ask for. A GUI allows users to see communications live and also few
stats about each parking. The projects is written in C++ using <a href="https://github.com/ocornut/imgui">ImGui</a> and <a href="https://www.sfml-dev.org/index-fr.php">SFML</a>
GUIs.
<hr/>
<br/>
<a href="https://github.com/stanouz/CityQuiz"> CityQuiz</a> - During summer hollidays just after high school, I wanted to practice my Python's skills.
I find a CSV database listing the 36'000 french cities with information like number of inhabitants, GPS coordinates, area... I make a little GUI quiz
using Python and <a href="https://docs.python.org/fr/3/library/tkinter.html">tkinter</a>, we get 20 random cities and try to place those on a map, guess
area and number of inhabitants. Scores are calculated by the distance of real location, gaps with number of inhabitants and area... Later, I added a 
feature that allow users to open a chromium window with the city pinned on an <a href="https://www.openstreetmap.fr/">OpenStreetMap</a> map.
<hr/>
<br/>
<a href="https://github.com/stanouz/projet-sfl"> Projet-sfl</a> - 2D 'Zelda like' game. Explore the open-world to fight your ennemies and fulfill the 
request of the NPCs, made for an academic projet with 2 others students. We wanted to have nice looking map, so we used the <a href="https://www.mapeditor.org/"> Tiled</a>
map editor software, then we developped a parsing tool in order to retrieve and save all usefull informations of .tmx and .tsx files generated by Tiled.
We also developped AI's for NPC and ennemies, NPC can just talk with the player when he is close enought. However, ennemies want to fight the player, when he 
enter in their visibility radius, they run on him and if they can get close enought, they hit the player. Fortunatly, the player is faster than ennemies 
so he can easily run away and go back to fight when he has enought pv. The game is over when player dies or all ennemies have been killed.
<hr/>
<br/>
Computer Vision - I'm really intersted about AI and data analysis so I study about Machine Learning and develop computer vision algorithm. I already make a digit 
recognition algorithm and my goal is to make a Sudoku solver, where users juste have to scan their sudoku grid so the program can recognize digits that are 
already in the grid and guess the missing ones with a sudoku solving algorithm.
